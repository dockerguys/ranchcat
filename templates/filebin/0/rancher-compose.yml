.catalog:
  name: "filebin"
  version: "v1.1"
  description: "File sharing without hassel"
  minimum_rancher_version: v1.0.0
  questions:
    - variable: filebin_image
      description: "The docker image to use for the FileBin server."
      label: "FileBin Docker Image"
      type: "enum"
      options:
        - "dockerguys/filebin:1.1.0"
      default: "dockerguys/filebin:1.1.0"
      required: true
    - variable: storage_provider
      description: "Storage backend to use."
      label: "Storage Provider"
      type: "enum"
      options:
        - "local"
        - "s3"
        - "gdrive"
      default: "local"
      required: true
    - variable: s3_region
      description: AWS region name. Fill this if using s3 storage provider.
      label: "AWS Region Name"
      required: false
      type: "string"
    - variable: s3_aws_access_key
      description: AWS access key. Fill this if using s3 storage provider.
      label: "AWS Access Key"
      required: false
      type: "string"
    - variable: s3_aws_secret_key
      description: AWS secret key. Fill this if using s3 storage provider.
      label: "AWS Secret Key"
      required: false
      type: "string"
    - variable: s3_bucket
      description: Bucket name. Fill this if using s3 storage provider.
      label: "Bucket Name"
      required: false
      type: "string"
    - variable: s3_endpoint
      description: AWS endpoint. Fill this if using s3 storage provider and using Minio
      label: "AWS Endpoint"
      required: false
      type: "string"
    - variable: s3_path_style
      description: Path style. Fill this if using s3 storage provider and using Minio.
      label: "Path Style"
      required: false
      type: "string"
    - variable: s3_no_multipart
      description: Disable multipart upload. Affects s3 storage provider only.
      label: "Disable Multipart Upload"
      required: false
      type: boolean
      default: false
    - variable: gdrive_client_json_file
      label: "GDrive OAuth Configuration"
      description: Path to OAuth client configuration. For Google Drive storage provider only.
      required: false
      type: "string"
    - variable: gdrive_local_config_path
      label: "GDrive Local Configuration"
      description: Path to store local configuration cache. For Google Drive storage provider only.
      required: false
      type: "string"
    - variable: gdrive_chunk_size
      label: "GDrive Chunk Size"
      description: Chunk size for upload in MB. For Google Drive storage provider only.
      required: false
      type: int
      default: 8
    - variable: rate_limit
      label: "Rate Limit"
      description: Number of requests allowed per minute. Defaults to unlimited.
      required: true
      type: int
      default: 0
    - variable: enable_profiler
      label: "Enable Profiler"
      description: Enables profiler service.
      required: true
      type: boolean
      default: false
    - variable: console_log
      label: "Console Log"
      description: Output log messages to standard out.
      required: true
      type: boolean
      default: false
    - variable: http_auth_user
      description: |
        The user name for HTTP authentication. This is optional.
      label: "User Name"
      required: false
      type: "string"
    - variable: http_auth_password
      description: |
        The password for HTTP authentication. This is optional.
      label: "Password"
      required: false
      type: "password"
    - variable: ip_whitelist
      description: Whitelist IPs that can use this service. Use comma to separate items.
      label: "Whitelist IP"
      required: false
      type: "string"
    - variable: ip_blacklist
      description: Blacklist IPs that cannot use this service. Use comma to separate items.
      label: "Blacklist IP"
      required: false
      type: "string"
    - variable: filebin_extargs
      description: Extra arguments to pass to FileBin server.
      label: "Extra Arguments"
      required: false
      type: "string"
    # --- common param: host affinity
    - variable: host_affinity_label
      description: "The stack will launch on one of the hosts that has this label."
      label: "Host Affinity Label"
      type: string
      required: false
    # --- common param: storage; subst vols_required = `volume ("Volume Name"_filebin)`
    - variable: datavolume_name
      label: "Volume Base Name"
      description: |
        To store the application data in volume(s), enter the base volume name that should be used. One or more volumes will be created with this value as the prefix. 
        By default, all volumes created will be host scoped named. See "Storage Driver" for other storage options.
      required: false
      type: string
    - variable: volume_exists
      label: "Volume Exists"
      description: |
        Check this if you have already created the volume ("Volume Name"_filebin). Remember to set the "Volume Storage Driver" too. Do not fill 
        in "NFS Driver Host" or "NFS Driver Volume Path".
      required: true
      type: boolean
      default: false
    #- variable: storage_size
    #  label: "Volume Storage Size"
    #  description: "Limit the size of the log volume (in megabytes). Defaults to unlimited."
    #  required: false
    #  type: int
    - variable: storage_driver
      label: "Volume Storage Driver"
      description: |
        To use a stack scoped volume backed by a persistent storage service, enter the name
        of an existing storage driver (e.g. "rancher-nfs"). This also requires "Volume Name" to be set.
      required: true
      type: enum
      default: "local"
      options:
        - local
        - rancher-nfs
    - variable: storage_driver_nfsopts_host
      label: "NFS Driver Host"
      description: |
        Specify a NFS hostname instead of the default NFS server. Only fill in this option if "Volume Storage Driver" is 
        set to "rancher-nfs", and the volume does not already exist.
      required: false
      type: string
    - variable: storage_driver_nfsopts_export
      label: "NFS Driver Volume Path"
      description: |
        Specify the exported base path on the NFS server (e.g. "/storage/nfsvol"). The full directory(ies) created 
        on the NFS server will be this path and the volume name(s). Do not append the "/" at the end. This exported base path 
        must already exist on the NFS server. Only fill in this option if "Volume Storage Driver" is set to "rancher-nfs", and 
        the volume does not already exist.
      required: false
      type: string
    - variable: storage_retain_volume
      label: "Retain NFS Volume"
      description: Keep the volumes created even after this stack gets deleted. This option has no effect if the volume(s) already exists.
      required: true
      type: boolean
      value: false
    # --- common param: repull
    - variable: repull_image
      description: "Pull from registry source even if the host already have a local image with the same tag."
      label: "Reload Images"
      type: enum
      options:
        - always
        - never
      required: true
      default: "never"
    # --- common param: custom registry
    - variable: docker_registry_name
      description: "Pull from private registry. Leave blank to pull from public Docker Hub."
      label: "Private Registry"
      type: string
      required: false
    # --- common param: limit memory; exclude docker_memory_swap_limit
    - variable: docker_memory_limit
      label: "Limit Memory"
      description: "Maxiumum memory that each container can use (in megabytes). Defaults to unlimited. Do not specify a value lower than 4."
      type: int
      required: false
    - variable: docker_memory_kernel_limit
      label: "Limit Kernel Memory"
      description: |
        Maxiumum kernel memory that each container can use (in megabytes). Defaults to unlimited. If this value is lower than Limit Memory, 
        the container will experience OOM error if it runs out of kernel memory, unless memory is unlimited, in which case it will wait 
        for memory released.
      type: int
      required: false
    # --- common param: limit cpu
    - variable: docker_cpu_quota_limit
      label: "Limit CPUs"
      description: |
        Limit CPU resources (in multiples of 100,000 microseconds). Defaults to unlimited. For example, "150000" limits the container 
        to 1.5 CPUs.
      type: int
      required: false
    - variable: docker_cpu_weight_limit
      label: "CPU Weight"
      description: |
        A number lower than the default will have less priority when competing for CPU resources and vice verse.
      type: int
      required: true
      default: 1024

version: '2'
services:
  filebin:
    scale: 1
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 8080
      unhealthy_threshold: 3
      interval: 2000
      strategy: recreate
