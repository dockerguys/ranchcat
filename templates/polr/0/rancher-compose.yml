version: '2'
catalog:
  name: "Polr"
  version: "v2.2"
  description: "A modern, powerful, and robust URL shortener"
  minimum_rancher_version: v0.51.0
  maintainer: dockerguys <dockerguys@lizoc.com>
  questions:
    - variable: "polr_image"
      label: "Polr Image"
      description: "Image to use. Be sure to fill in the 'Private Registry' field too if the image is not available publically."
      required: true
      default: "dockerguys/polr:2.2.0"
      type: enum
      options: # List of options if using type of `enum`
        - dockerguys/polr:2.2.0
    - variable: "db_vendor"
      description: "Database backend for Polr."
      label: "DB Vendor"
      default: "mysql"
      required: true
      type: "enum"
      options:
        - mysql
    - variable: "db_service"
      description: "External DB service to use. You can reference the service as 'db' by setting this. Ignore this if using sqlite3."
      label: "DB Service"
      default: ""
      required: false
      type: "service"
    - variable: "db_name"
      description: "Name of database. Ignore this if using sqlite3."
      label: "Database Name"
      required: true
      type: "string"
      default: "polr"
    - variable: "db_username"
      description: "Database user with full access to the database. Ignore this if using sqlite3."
      label: "Database User Name"
      required: true
      type: "string"
      default: "polrapp"
    - variable: "db_password"
      description: "Password for database user with full access to the database ('#' and ';' is not allowed). Ignore this if using sqlite3."
      label: "Database Password"
      required: true
      type: "password"
      default: "DatabasePassword"
    # --- common param: host affinity
    - variable: host_affinity_label
      description: "The stack will launch on one of the hosts that has this label."
      label: "Host Affinity Label"
      type: string
      required: false
    # --- common param: repull
    - variable: repull_image
      description: "Pull from registry source even if the host already have a local image with the same tag."
      label: "Reload Images"
      type: enum
      options:
        - always
        - never
      required: true
      default: "never"
    # --- common param: custom registry
    - variable: docker_registry_name
      description: "Pull from private registry. Leave blank to pull from public Docker Hub."
      label: "Private Registry"
      type: string
      required: false
    # --- common param: limit memory
    - variable: docker_memory_limit
      label: "Limit Memory"
      description: "Maxiumum memory that each container can use (in megabytes). Defaults to unlimited. Do not specify a value lower than 4."
      type: int
      required: false
    - variable: docker_memory_kernel_limit
      label: "Limit Kernel Memory"
      description: |
        Maxiumum kernel memory that each container can use (in megabytes). Defaults to unlimited. If this value is lower than Limit Memory, 
        the container will experience OOM error if it runs out of kernel memory, unless memory is unlimited, in which case it will wait 
        for memory released.
      type: int
      required: false
    - variable: docker_memory_swap_limit
      label: "Limit Swap Memory"
      description: |
        Maxiumum swap that each container can use (in megabytes). Defaults to twice of memory limit. Set to "-1" to allow unlimited, 
        or the same value as Limit Memory to disable swap.
      type: int
      required: false
    # --- common param: limit cpu
    - variable: docker_cpu_quota_limit
      label: "Limit CPUs"
      description: |
        Limit CPU resources (in multiples of 100,000 microseconds). Defaults to unlimited. For example, "150000" limits the container 
        to 1.5 CPUs.
      type: int
      required: false
    - variable: docker_cpu_weight_limit
      label: "CPU Weight"
      description: |
        A number lower than the default will have less priority when competing for CPU resources and vice verse.
      type: int
      required: true
      default: 1024

services:
  polr:
    scale: 1
    retain_ip: true
    health_check:
      response_timeout: 2000
      healthy_threshold: 2
      port: 80
      unhealthy_threshold: 3
      initializing_timeout: 300000
      interval: 2000
      strategy: recreate
      request_line: GET "/" "HTTP/1.0"
      reinitializing_timeout: 120000
