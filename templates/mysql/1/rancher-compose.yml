.catalog:
  name: "mysql"
  version: "v10.3.13.0"
  description: "A recommended stack for the MySQL RDBMS."
  minimum_rancher_version: v1.0.0
  questions:
    - variable: mysql_image
      description: "The docker image to use for the MySQL server."
      label: "MySQL Docker Image"
      type: "enum"
      options:
        - "dockerguys/mariadb:10.3.17.0"
      default: "dockerguys/mariadb:10.3.17.0"
      required: true
    - variable: mysql_root_name
      description: |
        The name of the root superuser account. The root superuser account will have full access to all databases. The root account name should be in 
        lower case alphanumeric only, and must not start with a number.
      label: "MySQL Root User"
      required: true
      type: "string"
      default: "root"
    - variable: mysql_root_password
      description: |
        The password that will be set for the MySQL root superuser account. You are recommended to use alphanumeric characters only, and change the 
        password after deployment via the web administration interface.
      label: "MySQL Root Password"
      required: true
      type: password
    - variable: mysql_database
      description: 
        Specify the name of a database to be created on image startup. The database name should be in alphanumeric only, and must not start with 
        a number.
      label: "MySQL Database"
      required: true
      type: "string"
      default: "defaultdb"
    - variable: mysql_user
      description: 
        Creates an additional MySQL (super)user. The field "MySQL Password" must also be set. Naming constraints are similar to that 
        of "MySQL Root User".
      label: "MySQL User"
      required: true
      type: "string"
      default: "dbadmin"
    - variable: mysql_password
      description: 
        A password for the additional MySQL (super)user. The field "MySQL User" must also be set. You are recommended to use alphanumeric 
        characters only, and change the password after deployment via the web administration interface.
      label: "MySQL Password"
      required: true
      type: password
    - variable: mysql_buffer_memory
      description: |
        Sets the InnoDB buffer memory size (in megabytes). You should only use InnoDB after enabling this. If you are limiting overall 
        container memory using "Limit Memory", make sure this is about 75% of the overall memory limit.
      label: "InnoDB Memory Buffer"
      required: false
      type: "int"
    - variable: mysql_extargs
      description: |
        Extra arguments for starting up "mysqld". Do not specify the "user" or "console" flags.
      label: "MySQL Startup Arguments"
      type: "string"
      default: ""
      required: false
    - variable: host_database_mountpoint
      label: "Direct Mountpoint"
      description: |
        Absolute path to a directory on the host that will store the database. Ignore this if you are using volumes.
      required: false
      type: string
    - variable: adminer_image
      description: "The docker image to use for web administration."
      label: "Web Admin Docker Image"
      type: "enum"
      options:
        - "dockerguys/adminer:4.7.2"
        - "dockerguys/adminer:4.7.3"
      default: "dockerguys/adminer:4.7.3"
      required: true
    - variable: adminer_css
      description: "CSS theme file for web administration interface."
      label: "Web Admin CSS"
      type: "string"
      required: false
    - variable: adminer_plugins
      description: "Enable extra plugins for web administration interface. Separate multiple plugin names with space."
      label: "Web Admin Plugins"
      type: "string"
      required: false
    # --- common param: host affinity
    - variable: host_affinity_label
      description: "The stack will launch on one of the hosts that has this label."
      label: "Host Affinity Label"
      type: string
      required: false
    # --- common param: 
    # --- - storage
    # --- -- subst vols_required = `volume ("Volume Name"_db)`
    # --- -- subst vol_driver_local_only = `true`
    - variable: datavolume_name
      label: "Volume Base Name"
      description: |
        To store the application data in volume(s), enter the base volume name that should be used. One or more volumes will be created with this value as the prefix. 
        By default, all volumes created will be host scoped named. See "Storage Driver" for other storage options.
      required: false
      type: string
    - variable: volume_exists
      label: "Volume Exists"
      description: |
        Check this if you have already created the volume ("Volume Name"_db). Remember to set the "Volume Storage Driver" too.
      required: true
      type: boolean
      default: false
    #- variable: storage_size
    #  label: "Volume Storage Size"
    #  description: "Limit the size of the log volume (in megabytes). Defaults to unlimited."
    #  required: false
    #  type: int
    - variable: storage_driver
      label: "Volume Storage Driver"
      description: |
        To use a stack scoped volume backed by a persistent storage service, enter the name
        of an existing storage driver (e.g. "rancher-nfs"). This also requires "Volume Name" to be set.
      required: true
      type: enum
      default: "local"
      options:
        - local
    # --- common param: repull
    - variable: repull_image
      description: "Pull from registry source even if the host already have a local image with the same tag."
      label: "Reload Images"
      type: enum
      options:
        - always
        - never
      required: true
      default: "never"
    # --- common param: custom registry
    - variable: docker_registry_name
      description: "Pull from private registry. Leave blank to pull from public Docker Hub."
      label: "Private Registry"
      type: string
      required: false
    # --- common param: limit memory; exclude docker_memory_swap_limit
    - variable: docker_memory_limit
      label: "Limit Memory"
      description: "Maxiumum memory that each container can use (in megabytes). Defaults to unlimited. Do not specify a value lower than 4."
      type: int
      required: false
    - variable: docker_memory_kernel_limit
      label: "Limit Kernel Memory"
      description: |
        Maxiumum kernel memory that each container can use (in megabytes). Defaults to unlimited. If this value is lower than Limit Memory, 
        the container will experience OOM error if it runs out of kernel memory, unless memory is unlimited, in which case it will wait 
        for memory released.
      type: int
      required: false
    # --- common param: limit cpu
    - variable: docker_cpu_quota_limit
      label: "Limit CPUs"
      description: |
        Limit CPU resources (in multiples of 100,000 microseconds). Defaults to unlimited. For example, "150000" limits the container 
        to 1.5 CPUs.
      type: int
      required: false
    - variable: docker_cpu_weight_limit
      label: "CPU Weight"
      description: |
        A number lower than the default will have less priority when competing for CPU resources and vice verse.
      type: int
      required: true
      default: 1024

version: '2'
services:
  mysql-server:
    scale: 1
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 3306
      unhealthy_threshold: 3
      interval: 2000
      strategy: recreate
  adminer:
    scale: 1
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 80
      unhealthy_threshold: 3
      interval: 2000
      strategy: recreate   
